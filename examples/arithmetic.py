from slrp import RE, S, L

INTEGER_OPERAND = RE(r"(\d+)") % int
OPERATOR = RE("([-+/*])")
WHITESPACE = RE(r"\s*")
OPEN_PARENTHESIS = S("(")
CLOSE_PARENTHESIS = S(")")


class BinaryOperation:
    def __init__(self, *args):
        self.args = args


APPLIED_OPERATOR_EXPR = WHITESPACE * OPERATOR * WHITESPACE * INTEGER_OPERAND
BINARY_OPERATION_EXPR = (INTEGER_OPERAND * WHITESPACE) + APPLIED_OPERATOR_EXPR

BINARY_OPERATION = BINARY_OPERATION_EXPR % BinaryOperation
PARENTHESIS_EXPR = OPEN_PARENTHESIS * L(lambda: COMMON_EXPRESSION) * CLOSE_PARENTHESIS
COMMON_EXPRESSION = PARENTHESIS_EXPR | BINARY_OPERATION
